{"data":{"site":{"siteMetadata":{"title":"Qhkm92 Blog","author":"Qhkm92"}},"markdownRemark":{"id":"1aeeb74f-a429-5b1a-8bb7-48271dfd557a","excerpt":"11111111 Golang is a very easy to learn language but there are some things might be hard for developers who are coming from high level languange like javascript…","html":"<h1>11111111</h1>\n<p>Golang is a very easy to learn language but there are some things might be hard for developers who are coming from high level languange like javascript like me to comprehend. And one of that is the use of <strong>pointer</strong>.</p>\n<h2>Pointer</h2>\n<p>Pointer in go refers to the memory address</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> “fmt”\n\n<span class=\"token comment\">// Person は人間を表す構造体。khhjjj</span>\n<span class=\"token keyword\">type</span> Person <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">{</span>\n    Name <span class=\"token builtin\">string</span>\n    Age  <span class=\"token builtin\">int</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ポインタ型の変数を宣言する</span>\n    <span class=\"token comment\">// pがポインタ型変数</span>\n\t  <span class=\"token comment\">// p is a variable with type pointer</span>\n    <span class=\"token comment\">// *Personポインタ型</span>\n    <span class=\"token comment\">// *Person type pointer</span>\n    <span class=\"token keyword\">var</span> p <span class=\"token operator\">*</span>Person\n\n    p <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>Person<span class=\"token punctuation\">{</span>\n        Name<span class=\"token punctuation\">:</span> “太郎”<span class=\"token punctuation\">,</span>\n        Age<span class=\"token punctuation\">:</span>  <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span>“p <span class=\"token punctuation\">:</span><span class=\"token operator\">%</span><span class=\"token operator\">+</span>v\\n”<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span>“変数pに格納されているアドレス <span class=\"token punctuation\">:</span><span class=\"token operator\">%</span>p”<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>So if we refer to the example above, first we declare the variable p with type *Person type pointer <code class=\"language-text\">var p *Person</code></p>\n<p>int 型のポインター変数\n<code class=\"language-text\">var pointer *int</code></p>\n<p>String 型のポインター変数\n<code class=\"language-text\">var pointer *string</code></p>\n<p>Person 型のポインター変数\n<code class=\"language-text\">var pointer *Person</code></p>\n<p>Variable\nPointer variable</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token comment\">//declare var a</span>\n<span class=\"token keyword\">int</span> a\na <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\n\n<span class=\"token comment\">//declare pointer variable p</span>\n<span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>p\n\n<span class=\"token comment\">//we insert into variable p with the adress of var a</span>\np <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>a\n\n<span class=\"token comment\">//Print out all the values</span>\n<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\\n\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 3</span>\n<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\\n\"</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span> <span class=\"token comment\">// address of a</span>\n<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>p<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 3</span>\n\na <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\n\n<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>p<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 5</span></code></pre></div>\n<p>So when we say its a pointter to an integer, it means that it points to a variable that is of type integer. Omg how easy it is after that aha moments.</p>\n<h1>golang</h1>\n<p><a href=\"https://play.golang.org/p/3DlDydJtRLD\">The Go Playground</a></p>","frontmatter":{"title":"learn golang","date":"May 06, 2015"}}},"pageContext":{"slug":"/lol/","previous":{"id":"4a4bda8f-7035-5d85-a518-749c58bc4534","fields":{"slug":"/my-second-post/"},"frontmatter":{"title":"My Second Post!","categories":["golang"]}},"next":{"id":"766b838b-426a-5d76-ad32-090286cf7f5f","fields":{"slug":"/hi-folks/"},"frontmatter":{"title":"New Beginnings","categories":null}}}}